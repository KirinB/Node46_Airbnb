generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model binh_luan {
  id                 Int         @id @default(autoincrement())
  ma_phong           Int?
  ma_nguoi_binh_luan Int?
  ngay_binh_luan     DateTime?   @default(now()) @db.Timestamp(0)
  noi_dung           String?     @db.VarChar(255)
  sao_binh_luan      Int?
  created_at         DateTime?   @default(now()) @db.Timestamp(0)
  updated_at         DateTime?   @default(now()) @db.Timestamp(0)
  phong              phong?      @relation(fields: [ma_phong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "binh_luan_ibfk_1")
  nguoi_dung         nguoi_dung? @relation(fields: [ma_nguoi_binh_luan], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "binh_luan_ibfk_2")

  @@index([ma_nguoi_binh_luan], map: "ma_nguoi_binh_luan")
  @@index([ma_phong], map: "ma_phong")
}

model dat_phong {
  id             Int                  @id @default(autoincrement())
  ma_phong       Int?
  ngay_den       DateTime?            @db.Timestamp(0)
  ngay_di        DateTime?            @db.Timestamp(0)
  so_luong_khach Int?
  ma_nguoi_dat   Int?
  created_at     DateTime?            @default(now()) @db.Timestamp(0)
  updated_at     DateTime?            @default(now()) @db.Timestamp(0)
  trang_thai     dat_phong_trang_thai @default(cho_thanh_toan)
  order_id       String?              @unique(map: "order_id") @db.VarChar(50)
  phong          phong?               @relation(fields: [ma_phong], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dat_phong_ibfk_1")
  nguoi_dung     nguoi_dung?          @relation(fields: [ma_nguoi_dat], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dat_phong_ibfk_2")

  @@index([ma_nguoi_dat], map: "ma_nguoi_dat")
  @@index([ma_phong], map: "ma_phong")
}

model nguoi_dung {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  email       String      @db.VarChar(255)
  pass_word   String      @db.VarChar(255)
  phone       String?     @db.VarChar(255)
  birth_day   String?     @db.VarChar(255)
  gender      String?     @db.VarChar(255)
  role        String?     @db.VarChar(255)
  created_at  DateTime?   @default(now()) @db.Timestamp(0)
  updated_at  DateTime?   @default(now()) @db.Timestamp(0)
  avatar      String?     @db.VarChar(255)
  facebook_id String?     @unique(map: "facebook_id") @db.VarChar(255)
  isActive    Boolean?    @default(false)
  expiration  DateTime?   @db.DateTime(0)
  codeId      String?     @unique(map: "codeId") @db.VarChar(255)
  binh_luan   binh_luan[]
  dat_phong   dat_phong[]
}

model phong {
  id         Int         @id @default(autoincrement())
  ten_phong  String      @db.VarChar(255)
  khach      Int?
  phong_ngu  Int?
  giuong     Int?
  phong_tam  Int?
  mo_ta      String?     @db.VarChar(255)
  gia_tien   Int?
  may_giat   Boolean?
  ban_la     Boolean?
  tivi       Boolean?
  dieu_hoa   Boolean?
  wifi       Boolean?
  bep        Boolean?
  do_xe      Boolean?
  ho_boi     Boolean?
  ban_ui     Boolean?
  hinh_anh   String?     @db.VarChar(255)
  ma_vi_tri  Int?
  created_at DateTime?   @default(now()) @db.Timestamp(0)
  updated_at DateTime?   @default(now()) @db.Timestamp(0)
  binh_luan  binh_luan[]
  dat_phong  dat_phong[]
  vi_tri     vi_tri?     @relation(fields: [ma_vi_tri], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "phong_ibfk_1")

  @@index([ma_vi_tri], map: "ma_vi_tri")
}

model vi_tri {
  id         Int       @id @default(autoincrement())
  ten_vi_tri String    @db.VarChar(255)
  tinh_thanh String?   @db.VarChar(255)
  quoc_gia   Int?
  hinh_anh   String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  phong      phong[]
}

enum dat_phong_trang_thai {
  cho_thanh_toan
  da_thanh_toan
  that_bai
  da_huy
}
